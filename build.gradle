buildscript {
  ext.versions = [
    'compileSdk': 31,
    'minSdk': 21,
    'targetSdk': 31,
    'sourceCompatibility': JavaVersion.VERSION_1_8,
    'targetCompatibility': JavaVersion.VERSION_1_8,
    'kotlin': '1.6.10',
    'okhttp': '4.9.3',
    'okio': '3.0.0',
  ]

  ext.deps = [
    androidPlugin: 'com.android.tools.build:gradle:7.0.4',
    kotlinPlugin: "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}",
    okhttp: "com.squareup.okhttp3:okhttp:${versions.okhttp}",
    okio: "com.squareup.okio:okio:${versions.okio}",
    mockWebServer: "com.squareup.okhttp3:mockwebserver:${versions.okhttp}",
    pollexor: 'com.squareup:pollexor:3.0.0',
    androidxAnnotations: 'androidx.annotation:annotation:1.3.0',
    androidxCore: 'androidx.core:core:1.6.0',
    androidxCursorAdapter: 'androidx.cursoradapter:cursoradapter:1.0.0',
    androidxExifInterface: 'androidx.exifinterface:exifinterface:1.3.3',
    androidxFragment: 'androidx.fragment:fragment:1.4.0',
    androidxLifecycle: 'androidx.lifecycle:lifecycle-common:2.4.0',
    androidxStartup: 'androidx.startup:startup-runtime:1.1.0',
    coroutines: 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0',
    junit: 'junit:junit:4.13.2',
    truth: 'com.google.truth:truth:1.1.3',
    robolectric: 'org.robolectric:robolectric:4.6.1',
    mockito: 'org.mockito:mockito-core:3.0.0',
    drawablePainter: 'com.google.accompanist:accompanist-drawablepainter:0.23.1',
    composeUi: 'androidx.compose.ui:ui:1.1.1',
    foundation: 'androidx.compose.foundation:foundation:1.1.1'
  ]

  ext.isCi = "true" == System.getenv('CI')

  repositories {
    mavenCentral()
    google()
    gradlePluginPortal()
  }

  dependencies {
    classpath deps.androidPlugin
    classpath deps.kotlinPlugin
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.40.0'
    classpath 'com.vanniktech:gradle-maven-publish-plugin:0.18.0'
    classpath 'com.diffplug.spotless:spotless-plugin-gradle:6.3.0'
    classpath 'org.jetbrains.kotlinx:binary-compatibility-validator:0.8.0'
  }
}

apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'binary-compatibility-validator'

apiValidation {
  ignoredProjects += ['picasso-sample']
}

subprojects {
  repositories {
    mavenCentral()
    google()
  }

  tasks.withType(Test) {
    testLogging {
      events "failed"
      exceptionFormat "full"
      showExceptions true
      showStackTraces true
      showCauses true
    }
  }

  plugins.withId('com.vanniktech.maven.publish') {
    mavenPublish {
      sonatypeHost = 'S01'
    }
    publishing {
      repositories {
        /**
         * Want to push to an internal repository for testing?
         * Set the following properties in ~/.gradle/gradle.properties.
         *
         * internalUrl=YOUR_INTERNAL_URL
         * internalUsername=YOUR_USERNAME
         * internalPassword=YOUR_PASSWORD
         */
        maven {
          name = "internal"
          url = providers.gradleProperty("internalUrl").forUseAtConfigurationTime()
          credentials(PasswordCredentials)
        }
      }
    }
  }

  apply plugin: 'com.diffplug.spotless'
  spotless {
    kotlin {
      target('**/*.kt')
      licenseHeaderFile(rootProject.file('gradle/license-header.txt'))
      // Spotless doesn't read .editorconfig yet: https://github.com/diffplug/spotless/issues/142
      ktlint('0.41.0').userData([
          'insert_final_newline': 'true',
          'end_of_line': 'lf',
          'charset': 'utf-8',
          'indent_size': '2',
      ])
    }
  }

  group = GROUP
  version = VERSION_NAME
}

tasks.wrapper {
  distributionType = Wrapper.DistributionType.ALL
}

configurations {
  osstrich
}

dependencies {
  osstrich 'com.squareup.osstrich:osstrich:1.4.0'
}

tasks.register('deployJavadoc', JavaExec) {
  classpath = configurations.osstrich
  main = 'com.squareup.osstrich.JavadocPublisher'
  args "$buildDir/osstrich", 'git@github.com:square/picasso.git', 'com.squareup.picasso'
}
